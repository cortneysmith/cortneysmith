{"version":3,"sources":["images/butter-cms.png","Components/App.tsx","butter-client.tsx","Components/Blog.tsx","Components/BlogPost.tsx","Components/Router.tsx","Components/Header.tsx","Components/Footer.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","App","state","meta","data","react_default","a","createElement","className","href","Component","butter","Butter","Blog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","match","page","params","post","list","page_size","resp","setState","_this$state$meta","next_page","previous_page","map","key","react_router_dom","to","concat","slug","title","withRouter","BlogPost","retrieve","seo_title","name","content","meta_description","featured_image","dangerouslySetInnerHTML","__html","body","React","Router","react_router","exact","path","component","Header","Footer","target","src","ButterCMSLogo","Boolean","window","location","hostname","ReactDOM","render","Components_Header","document","getElementById","Components_Router","Components_Footer","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d570f05f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/butter-cms.c01e3ea9.png\";","import React, { Component } from \"react\";\r\n\r\ninterface AppState {}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    meta: {},\r\n    data: []\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p>This is my app!</p>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam non\r\n          odio vel tortor semper lacinia ut sed erat. Pellentesque ultrices sem\r\n          ut tincidunt efficitur. Donec a mi commodo, suscipit purus vitae,\r\n          lacinia tortor. Integer rutrum erat eget risus varius, viverra blandit\r\n          quam convallis. Lorem ipsum dolor sit amet, consectetur adipiscing\r\n          elit. Mauris volutpat ornare cursus. Suspendisse ullamcorper turpis\r\n          non justo porttitor vestibulum. Vestibulum fringilla euismod libero,\r\n          eget efficitur velit semper semper. Suspendisse dignissim sagittis est\r\n          vitae congue. Nam porta lorem eget libero porttitor, et vestibulum\r\n          sapien ullamcorper. Aliquam ut ultrices nisl.\r\n        </p>\r\n\r\n        <p>\r\n          Vestibulum eget hendrerit arcu, vitae maximus nunc. Aenean eget mi\r\n          vitae ligula aliquam rutrum. Proin tincidunt blandit tincidunt. Nulla\r\n          vitae mi vel ante tristique hendrerit. Pellentesque faucibus vitae\r\n          eros sit amet efficitur. Nullam odio quam, varius nec gravida ut,\r\n          iaculis vitae magna. Vivamus lacinia tempus magna vitae tincidunt.\r\n          Curabitur gravida accumsan arcu id pretium. Suspendisse ultrices lorem\r\n          ornare ante aliquam, sit amet condimentum ex condimentum.\r\n        </p>\r\n\r\n        <p>\r\n          Phasellus laoreet, augue a malesuada laoreet, risus justo ultricies\r\n          tellus, ut posuere nisl leo vel arcu. Vestibulum magna velit, posuere\r\n          hendrerit fringilla nec, vestibulum non lacus. Integer ipsum mauris,\r\n          mollis in leo eu, tempus rhoncus turpis. In ullamcorper justo eget\r\n          ipsum cursus, et tincidunt ligula interdum. Etiam cursus dui ut ante\r\n          gravida, vitae hendrerit massa eleifend. Duis faucibus fringilla sem\r\n          non malesuada. Aliquam vel tincidunt lorem. Nam pulvinar nulla non\r\n          ante luctus fermentum. Vivamus varius justo quis dolor posuere, non\r\n          rhoncus lectus condimentum. Donec venenatis ex nisl, sed pulvinar ex\r\n          interdum placerat. In iaculis justo eu eros fermentum venenatis.\r\n          Maecenas faucibus metus quis molestie interdum. Quisque sagittis,\r\n          lectus tincidunt pulvinar gravida, est dolor sagittis elit, et egestas\r\n          urna risus nec elit. Pellentesque habitant morbi tristique senectus et\r\n          netus et malesuada fames ac turpis egestas.\r\n        </p>\r\n\r\n        <p>\r\n          Sed at sem eu massa maximus fermentum. Donec a sagittis risus. Morbi\r\n          malesuada elit elementum, varius risus et, viverra justo. Suspendisse\r\n          sed viverra risus. Pellentesque elementum felis nec purus porttitor,\r\n          ut sodales augue scelerisque. Mauris ornare, libero ut ultricies\r\n          elementum, augue velit vehicula quam, a pharetra massa velit nec\r\n          lectus. Interdum et malesuada fames ac ante ipsum primis in faucibus.\r\n          Ut congue nunc eu posuere convallis. Nulla faucibus felis in leo\r\n          cursus, placerat feugiat massa aliquet. Proin tristique purus in purus\r\n          faucibus mattis. Aenean ac nunc leo. Aliquam mi eros, consequat nec\r\n          augue id, elementum finibus magna. Fusce vitae fringilla purus. Donec\r\n          efficitur eros nibh, a eleifend nisl feugiat ut.\r\n        </p>\r\n\r\n        <p>\r\n          Morbi commodo quam non bibendum fringilla. Donec eu congue eros. Sed\r\n          sit amet convallis lectus. Suspendisse feugiat orci quis sodales\r\n          porttitor. Suspendisse facilisis sagittis dui, vel pretium dui\r\n          placerat at. Morbi venenatis ipsum ac ipsum vulputate, vel laoreet\r\n          velit luctus. Proin pretium, lorem eleifend varius vulputate, dolor\r\n          neque ultrices augue, quis gravida augue lorem sed libero. Class\r\n          aptent taciti sociosqu ad litora torquent per conubia nostra, per\r\n          inceptos himenaeos. Quisque ut metus ac justo volutpat pellentesque ut\r\n          fermentum arcu. Ut scelerisque mauris nulla, et lacinia nunc hendrerit\r\n          ut. Morbi in nulla ut sem egestas varius non semper lacus. Mauris quis\r\n          ante ut nibh gravida fermentum. Suspendisse pharetra elementum mi\r\n          euismod semper. Sed sit amet aliquam purus. Mauris eu suscipit dolor.\r\n        </p>\r\n        <a href=\"/blog\">Go to the blog...</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import Butter from \"buttercms\";\r\n\r\nconst butter = Butter(\"6a66c029b49835315de8c84064be09ac44ccdf7c\");\r\n\r\nexport default butter;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport butter from \"../butter-client\";\r\n\r\ninterface BlogState {\r\n  meta: any;\r\n  data: any[];\r\n}\r\n\r\ninterface BlogParams {\r\n  page: any;\r\n}\r\n\r\nclass Blog extends Component<RouteComponentProps<BlogParams>, BlogState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { meta: {}, data: [] };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    let page = match.params.page || 1;\r\n\r\n    const resp = await butter.post.list({ page: page, page_size: 10 });\r\n    this.setState(resp.data);\r\n  }\r\n\r\n  render() {\r\n    const { next_page, previous_page } = this.state.meta;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.data.map((post: any, key: any) => {\r\n          return (\r\n            <div key={key}>\r\n              <Link to={`/blog/posts/${post.slug}`}>{post.title}</Link>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <br />\r\n\r\n        <div>\r\n          {previous_page && (\r\n            <Link to={`/blog/${previous_page}`}>\r\n              <a>Prev</a>\r\n            </Link>\r\n          )}\r\n\r\n          {next_page && (\r\n            <Link to={`/blog/${next_page}`}>\r\n              <a>Next</a>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Blog);\r\n","import React from \"react\";\r\nimport butter from \"../butter-client\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface BlogPostState {\r\n  data: any;\r\n}\r\n\r\ninterface BlogPostParams {\r\n  post: any;\r\n}\r\n\r\nclass BlogPost extends React.Component<\r\n  RouteComponentProps<BlogPostParams>,\r\n  BlogPostState\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { data: {} };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    const resp = await butter.post.retrieve(match.params.post);\r\n    this.setState(resp.data);\r\n  }\r\n\r\n  render() {\r\n    const post = this.state.data;\r\n\r\n    return (\r\n      <div className=\"blog_post\">\r\n        <title>{post.seo_title}</title>\r\n        <meta name=\"description\" content={post.meta_description} />\r\n        <meta name=\"og:image\" content={post.featured_image} />\r\n        <h1>{post.title}</h1>\r\n        <div dangerouslySetInnerHTML={{ __html: post.body }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BlogPost);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Blog from \"./Blog\";\r\nimport BlogPost from \"./BlogPost\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/blog\" component={Blog} />\r\n      <Route exact path=\"/blog/posts/:post\" component={BlogPost} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    meta: {},\r\n    data: []\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"innerHeaderContainer\">\r\n        <h1>Cortney Smith</h1>\r\n        <h2>Software engineer lady or whatever</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport ButterCMSLogo from \"../images/butter-cms.png\";\r\n\r\nclass Footer extends Component {\r\n  state = {\r\n    meta: {},\r\n    data: []\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"innerFooterContainer\">\r\n        <div className=\"footer-center-column\"></div>\r\n\r\n        <div className=\"butter-cms-logo\">\r\n          Blog powered by{\" \"}\r\n          <a href=\"https://buttercms.com\" target=\"_blank\">\r\n            <img src={ButterCMSLogo} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// REACT COMPONENTS\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Router from \"./Components/Router\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// CSS STYLESHEETS\r\nimport \"./css/index.css\";\r\nimport \"./css/blog.css\";\r\n\r\n// APP\r\nReactDOM.render(<Header />, document.getElementById(\"header\"));\r\nReactDOM.render(<Router />, document.getElementById(\"main\"));\r\nReactDOM.render(<Footer />, document.getElementById(\"footer\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}